<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns:cpp="http://www.example.org/cpp" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/cpp">
  <xsd:import namespace="http://www.omg.org/XMI" schemaLocation="platform:/plugin/org.eclipse.emf.ecore/model/XMI.xsd"/>
  <xsd:import namespace="http://www.eclipse.org/emf/2002/Ecore" schemaLocation="ecore.xsd"/>
  <xsd:simpleType name="CPPVisibility">
    <xsd:restriction base="xsd:NCName">
      <xsd:enumeration value="default"/>
      <xsd:enumeration value="private"/>
      <xsd:enumeration value="public"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CPPNamespace">
    <xsd:complexContent>
      <xsd:extension base="ecore:EPackage">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="typedefs" type="cpp:CPPTypedef"/>
          <xsd:element name="variables" type="cpp:CPPAttribute"/>
          <xsd:element name="operations" type="cpp:CPPOperation"/>
        </xsd:choice>
        <xsd:attribute name="typedefs" type="xsd:string"/>
        <xsd:attribute name="variables" type="xsd:string"/>
        <xsd:attribute name="operations" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CPPNamespace" type="cpp:CPPNamespace"/>
  <xsd:complexType name="CPPClass">
    <xsd:complexContent>
      <xsd:extension base="ecore:EClass">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="typedefs" type="cpp:CPPTypedef"/>
          <xsd:element name="nestedClasses" type="cpp:CPPClass"/>
        </xsd:choice>
        <xsd:attribute name="typedefs" type="xsd:string"/>
        <xsd:attribute name="nestedClasses" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CPPClass" type="cpp:CPPClass"/>
  <xsd:complexType abstract="true" name="CPPClassMember">
    <xsd:choice maxOccurs="unbounded" minOccurs="0">
      <xsd:element ref="xmi:Extension"/>
    </xsd:choice>
    <xsd:attribute ref="xmi:id"/>
    <xsd:attributeGroup ref="xmi:ObjectAttribs"/>
    <xsd:attribute name="visibility" type="cpp:CPPVisibility"/>
    <xsd:attribute name="static" type="xsd:boolean"/>
  </xsd:complexType>
  <xsd:element name="CPPClassMember" type="cpp:CPPClassMember"/>
  <xsd:complexType name="CPPAttribute">
    <xsd:complexContent>
      <xsd:extension base="ecore:EAttribute">
        <xsd:attribute name="visibility" type="cpp:CPPVisibility"/>
        <xsd:attribute name="static" type="xsd:boolean"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CPPAttribute" type="cpp:CPPAttribute"/>
  <xsd:complexType name="CPPOperation">
    <xsd:complexContent>
      <xsd:extension base="cpp:CPPClassMember">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="eAnnotations" type="ecore:EAnnotation"/>
          <xsd:element name="eType" nillable="true" type="ecore:EClassifier"/>
          <xsd:element name="eGenericType" nillable="true" type="ecore:EGenericType"/>
          <xsd:element name="eTypeParameters" type="ecore:ETypeParameter"/>
          <xsd:element name="eParameters" type="ecore:EParameter"/>
          <xsd:element name="eExceptions" type="ecore:EClassifier"/>
          <xsd:element name="eGenericExceptions" type="ecore:EGenericType"/>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="ordered" type="xsd:boolean"/>
        <xsd:attribute name="unique" type="xsd:boolean"/>
        <xsd:attribute name="lowerBound" type="xsd:int"/>
        <xsd:attribute name="upperBound" type="xsd:int"/>
        <xsd:attribute name="eType" type="xsd:string"/>
        <xsd:attribute name="eExceptions" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CPPOperation" type="cpp:CPPOperation"/>
  <xsd:complexType name="CPPTypedef">
    <xsd:complexContent>
      <xsd:extension base="ecore:ENamedElement">
        <xsd:choice maxOccurs="unbounded" minOccurs="0">
          <xsd:element name="eUpperBound" type="ecore:EGenericType"/>
          <xsd:element name="eTypeArguments" type="ecore:EGenericType"/>
          <xsd:element name="eLowerBound" type="ecore:EGenericType"/>
          <xsd:element name="eTypeParameter" type="ecore:ETypeParameter"/>
          <xsd:element name="eClassifier" type="ecore:EClassifier"/>
        </xsd:choice>
        <xsd:attribute name="eTypeParameter" type="xsd:string"/>
        <xsd:attribute name="eClassifier" type="xsd:string"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:element name="CPPTypedef" type="cpp:CPPTypedef"/>
</xsd:schema>
